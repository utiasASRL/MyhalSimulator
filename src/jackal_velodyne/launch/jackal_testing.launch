<launch>
  
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" /> 
  <arg name="headless" default="true" />
  <arg name="world_name" default="$(find jackal_velodyne)/worlds/sandbox.world" />
  <arg name="filter" default="false" />
  <arg name="mapping" default="false" />
  <arg name="map_file" default="$(find jackal_velodyne)/maps/myhal_map_V3.yaml"/>
  <arg name="gt_classify" default="true" />
  <arg name="filepath" default="/tmp/" />

  <!-- Short-term hack to support the original front_laser:=true argument for spawning
       the simulator. This will be removed in favour of using the config:=x arg instead. -->
  <arg name="front_laser" default="true" />
  <arg name="default_config" value="front_laser" if="$(arg front_laser)" />
  <arg name="default_config" value="base" unless="$(arg front_laser)" />
  <!-- end of hack -->

  <!-- Configuration of Jackal which you would like to simulate.
       See jackal_description for details. -->
  <arg name="config" default="$(arg default_config)" />

  <!-- Launch Gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>

  <!-- Load Jackal's description-->
  <param name="robot_description"
         command="$(find jackal_description)/scripts/env_run
                    $(find jackal_description)/urdf/configs/$(arg config)
                    $(find xacro)/xacro 
                    $(find jackal_velodyne)/urdf/jackal_velodyne.urdf.xacro filepath:=$(arg filepath)
                    --inorder" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />


  <!-- Control -->
  <include file="$(find jackal_control)/launch/control.launch" />
  <include file="$(find jackal_control)/launch/teleop.launch">
    <arg name="joystick" value="false"/>
  </include>

    <!-- here we may wish to launch the pointcloud filter -->
  <include file="$(find jackal_velodyne)/launch/include/pointcloud_filter2.launch">
    <arg name="filter" value="$(arg filter)" />
    <arg name="mapping" value="$(arg mapping)" />
    <arg name="gt_classify" value="$(arg gt_classify)" />
  </include>

  <!-- Spawn Jackal -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
              args="-urdf -model jackal -param robot_description -x 0 -y 0 -z 0.5" />

  <group if="$(arg gui)">
      <node pkg="rviz" type="rviz" name="rviz" args="-d $(find jackal_velodyne)/launch/include/run.rviz" />
  </group>

  <group if="$(arg mapping)">
    <include file="$(find jackal_velodyne)/launch/include/gmapping.launch"/>
  </group>

  <group unless="$(arg mapping)">
     <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
     <include file="$(find jackal_velodyne)/launch/include/amcl.launch" />
  </group>
  
  <!--- Run Move Base -->
 <include file="$(find jackal_velodyne)/launch/include/move_base.launch">
  <arg name="mapping" value="$(arg mapping)" />
 </include>
  
</launch>
